import numpy as np
import matplotlib.pyplot as plt
import os
import cv2

dir="E:/X/Projects/"
cat=['Reported','Non Reported']

for category in cat:
  path=os.path.join(dir,category)
  for img in os.listdir(path):
    img_array=cv2.imread(os.path.join(path,img), cv2.IMREAD_GRAYSCALE)
    plt.imshow(img_array,cmap="gray")
    plt.show()
    break
  break

print(img_array.shape)

img_size=50
new_array=cv2.resize(img_array, (img_size,img_size))
plt.imshow(new_array,cmap='gray')
plt.show

training_data=[]
def create_training_data():
  for category in cat:
  path=os.path.join(dir,category)
  num=cat.index(category)
  for img in os.listdir(path):
    img_array=cv2.imread(os.path.join(path,img), cv2.IMREAD_GRAYSCALE)
    new_array=cv2.resize(img_array, (img_size,img_size))
    training_data.append([new_array,class_num])

create_training_data()

print(len(training_data))

import random
random.shuffle(training_data)
for sample in training_data[:10]:
  print(sample[1])

train_X[]
train_Y[]

for features, label in training_data:
  train_X.append(features)
  train_Y.append(label)

x=np.array(X).reshape(-1, img_size,img_size,1)

import pickle
pickle_out=open("X.pickle","wb")
pickle.dump(X,pickle_out)
pickle_out.close

import pickle
pickle_out=open("Y.pickle","wb")
pickle.dump(Y,pickle_out)
pickle_out.close

pickle_in=open("X.pickle","rb")
X=pickle.load(pickle_in)
X[1]
